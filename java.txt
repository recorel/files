marcin@maru:/var/tmp/SCAN-NETWORK$ java ScryptParse 
n: 16384
r: 12
p: 1
marcin@maru:/var/tmp/SCAN-NETWORK$ cat ScryptParse.java
import java.util.List;
import java.util.ArrayList;

/*

8900	scrypt	SCRYPT:1024:1:1:MDIwMzMwNTQwNDQyNQ==:5FW+zWivLxgCWj7qLiQbeC8zaNQ+qdO0NUinvqyFcfo=

marcin@maru:~/tmp/NIFI/nifi-1.14.0$ atom nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/util/crypto/ScryptCipherProvider.java
marcin@maru:~/tmp/NIFI/nifi-1.14.0$ grep -r -i parseParameters * | grep -i parse
nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/util/crypto/scrypt/Scrypt.java

List<Integer> splitParams = parseParameters(parts[2]);
int n = splitParams.get(0);
int r = splitParams.get(1);
int p = splitParams.get(2);

e0c01


public static List<Integer> parseParameters(String encodedParams) {
    long params = Long.parseLong(encodedParams, 16);

    List<Integer> paramsList = new ArrayList<>(3);

    // Parse N, r, p from encoded value and add to return list
    paramsList.add((int) Math.pow(2, params >> 16 & 0xffff));
    paramsList.add((int) params >> 8 & 0xff);
    paramsList.add((int) params & 0xff);

    return paramsList;
}

*/



class ScryptParse
{
    // This is a static method
    public static List<Integer> parseParameters(String encodedParams) {
        long params = Long.parseLong(encodedParams, 16);

        List<Integer> paramsList = new ArrayList<>(3);

        // Parse N, r, p from encoded value and add to return list
        paramsList.add((int) Math.pow(2, params >> 16 & 0xffff));
        paramsList.add((int) params >> 8 & 0xff);
        paramsList.add((int) params & 0xff);

        return paramsList;
    }

    public static void main(String[] args)
    {
          /* You can see that we are calling this
           * method without creating any object.
           */
           String paramsString = "e0c01";
           List<Integer> splitParams = parseParameters(paramsString);
           int n = splitParams.get(0);
           int r = splitParams.get(1);
           int p = splitParams.get(2);

           System.out.println("n: " + n);
           System.out.println("r: " + r);
           System.out.println("p: " + p);

    }
}


